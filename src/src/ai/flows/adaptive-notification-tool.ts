// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview An AI agent that generates language-appropriate notifications based on user preferences.
 *
 * - generateNotification - A function that generates a notification message in the user's preferred language.
 * - GenerateNotificationInput - The input type for the generateNotification function.
 * - GenerateNotificationOutput - The return type for the generateNotification function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateNotificationInputSchema = z.object({
  languagePreference: z
    .enum(['en', 'fr', 'es'])
    .describe('The user\u2019s preferred language (en, fr, or es).'),
  messageType: z
    .string()
    .describe(
      'The type of message to generate (e.g., transaction update, account activity).' // Shortened description
    ),
  messageDetails: z
    .string()
    .describe('Specific details related to the message type (e.g., transaction ID, amount, recipient).'), // Shortened description
});
export type GenerateNotificationInput = z.infer<typeof GenerateNotificationInputSchema>;

const GenerateNotificationOutputSchema = z.object({
  notificationMessage: z
    .string()
    .describe('The generated notification message in the user\u2019s preferred language.'),
});
export type GenerateNotificationOutput = z.infer<typeof GenerateNotificationOutputSchema>;

export async function generateNotification(input: GenerateNotificationInput): Promise<GenerateNotificationOutput> {
  return generateNotificationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'adaptiveNotificationPrompt',
  input: {schema: GenerateNotificationInputSchema},
  output: {schema: GenerateNotificationOutputSchema},
  prompt: `You are a notification generator that generates messages in the correct language.

  Generate a notification message in the user's preferred language ({{{languagePreference}}}) based on the following information:

  Message Type: {{{messageType}}}
  Message Details: {{{messageDetails}}}

  Ensure the message is clear, concise, and relevant to the user.
  If the language preference is 'en', generate the message in English.
  If the language preference is 'fr', generate the message in French.
  If the language preference is 'es', generate the message in Spanish.
  `,
});

const generateNotificationFlow = ai.defineFlow(
  {
    name: 'generateNotificationFlow',
    inputSchema: GenerateNotificationInputSchema,
    outputSchema: GenerateNotificationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
